# Find map center and get map
center <- rev(sapply(rawdata, mean))
map <- GetMap(center=center, zoom=7)
# Translate original data
coords <- LatLon2XY.centered(map, rawdata$lat, rawdata$lon, 7)
coords <- data.frame(coords)
# Rerun heatmap
k2 <- kde2d(coords$newX, coords$newY, n=500)
# Create exponential transparency vector and add
alpha <- seq.int(0.5, 0.95, length.out=100)
alpha <- exp(alpha^6-1)
cols2 <- addalpha(cols, alpha)
# Plot
PlotOnStaticMap(map)
image(k2, col=cols2, add=T)
points(coords$newX, coords$newY, pch=16, cex=0.3)
library(MASS)
library(RgoogleMaps)
library(RColorBrewer)
source('colorRampPaletteAlpha.R')
# Keep the lon and lat data
rawdata <- data.frame(as.numeric(accidentsData$Longitude), as.numeric(accidentsData$Latitude))
names(rawdata) <- c("lon", "lat")
# Intensity from green to red
cols <- rev(colorRampPalette(brewer.pal(8, 'RdYlGn'))(100))
# Mapping via RgoogleMaps
# Find map center and get map
center <- rev(sapply(rawdata, mean))
map <- GetMap(center=center, zoom=7)
# Translate original data
coords <- LatLon2XY.centered(map, rawdata$lat, rawdata$lon, 7)
coords <- data.frame(coords)
# Rerun heatmap
k2 <- kde2d(coords$newX, coords$newY, n=500)
# Create exponential transparency vector and add
alpha <- seq.int(0.5, 0.95, length.out=100)
alpha <- exp(alpha^6-1)
cols2 <- addalpha(cols, alpha)
# Plot
PlotOnStaticMap(map)
image(k2, col=cols2, add=T)
points(coords$newX, coords$newY, pch=16, cex=0.3)
library(MASS)
library(RgoogleMaps)
library(RColorBrewer)
source('colorRampPaletteAlpha.R')
# Keep the lon and lat data
rawdata <- data.frame(as.numeric(accidentsData$Longitude), as.numeric(accidentsData$Latitude))
names(rawdata) <- c("lon", "lat")
# Intensity from green to red
cols <- rev(colorRampPalette(brewer.pal(8, 'RdYlGn'))(100))
# Mapping via RgoogleMaps
# Find map center and get map
center <- rev(sapply(rawdata, mean))
map <- GetMap(center=center, zoom=7)
# Translate original data
coords <- LatLon2XY.centered(map, rawdata$lat, rawdata$lon, 7)
coords <- data.frame(coords)
# Rerun heatmap
k2 <- kde2d(coords$newX, coords$newY, n=500)
# Create exponential transparency vector and add
alpha <- seq.int(0.5, 0.95, length.out=100)
alpha <- exp(alpha^6-1)
cols2 <- addalpha(cols, alpha)
# Plot
PlotOnStaticMap(map)
image(k2, col=cols2, add=T)
points(coords$newX, coords$newY, pch=16, cex=0.3)
```
# Chunk 1: set-options
options(width = 200)
# Chunk 2
library("downloader")
folder<-".\\data\\DfTRoadSafety_Accidents_2014.csv"
if(!file.exists(folder)){
# Download a csv file from the Internet:
fileURL <- "https://dl.dropboxusercontent.com/u/73991112/DfTRoadSafety_Accidents_2014.csv"
download.file(fileURL, destfile = folder)
# Always record the date
dateDownloaded <- date()
dateDownloaded
}
# Read from local drive
accidentsData <- read.csv(folder, sep = ",",header = T, row.names=NULL)[,c(1,4:5,8:12)]
# Reading the first records :
head(accidentsData)
# Chunk 3
summary(accidentsData[,c(4:5)])
library(MASS)
library(RgoogleMaps)
library(RColorBrewer)
source('colorRampPaletteAlpha.R')
# Keep the lon and lat data
rawdata <- data.frame(as.numeric(accidentsData$Longitude), as.numeric(accidentsData$Latitude))
names(rawdata) <- c("lon", "lat")
# Intensity from green to red
cols <- rev(colorRampPalette(brewer.pal(8, 'RdYlGn'))(100))
# Mapping via RgoogleMaps
# Find map center and get map
center <- rev(sapply(rawdata, mean))
map <- GetMap(center=center, zoom=7)
# Translate original data
coords <- LatLon2XY.centered(map, rawdata$lat, rawdata$lon, 7)
coords <- data.frame(coords)
# Rerun heatmap
k2 <- kde2d(coords$newX, coords$newY, n=500)
# Create exponential transparency vector and add
alpha <- seq.int(0.5, 0.95, length.out=100)
alpha <- exp(alpha^6-1)
cols2 <- addalpha(cols, alpha)
# Plot
PlotOnStaticMap(map)
image(k2, col=cols2, add=T)
points(coords$newX, coords$newY, pch=16, cex=0.3)
library(MASS)
library(RgoogleMaps)
library(RColorBrewer)
source('colorRampPaletteAlpha.R')
# Keep the lon and lat data
rawdata <- data.frame(as.numeric(accidentsData$Longitude), as.numeric(accidentsData$Latitude))
names(rawdata) <- c("lon", "lat")
# Intensity from green to red
cols <- rev(colorRampPalette(brewer.pal(8, 'RdYlGn'))(100))
# Mapping via RgoogleMaps
# Find map center and get map
center <- rev(sapply(rawdata, mean))
map <- GetMap(center=center, zoom=7)
# Translate original data
coords <- LatLon2XY.centered(map, rawdata$lat, rawdata$lon, 7)
coords <- data.frame(coords)
# Rerun heatmap
k2 <- kde2d(coords$newX, coords$newY, n=500)
# Create exponential transparency vector and add
alpha <- seq.int(0.5, 0.95, length.out=100)
alpha <- exp(alpha^6-1)
cols2 <- addalpha(cols, alpha)
# Plot
PlotOnStaticMap(map)
#image(k2, col=cols2, add=T)
points(coords$newX, coords$newY, pch=16, cex=0.3)
PlotOnStaticMap(map)
#image(k2, col=cols2, add=T)
points(coords$newX, coords$newY, pch=16, cex=0.1)
PlotOnStaticMap(map)
image(k2, col=cols2, add=T)
points(coords$newX, coords$newY, pch=16, cex=0.1)
points(coords$newX, coords$newY, pch=16, cex=0.01)
PlotOnStaticMap(map)
#image(k2, col=cols2, add=T)
points(coords$newX, coords$newY, pch=14, cex=0.1)
PlotOnStaticMap(map)
#image(k2, col=cols2, add=T)
points(coords$newX, coords$newY, pch=10, cex=0.1)
# Plot
PlotOnStaticMap(map)
#image(k2, col=cols2, add=T)
points(coords$newX, coords$newY, pch=20, cex=0.1)
# Plot
PlotOnStaticMap(map)
#image(k2, col=cols2, add=T)
points(coords$newX, coords$newY, pch=20, cex=0.3)
# Plot
PlotOnStaticMap(map)
#image(k2, col=cols2, add=T)
points(coords$newX, coords$newY, pch=25, cex=0.1)
# Plot
PlotOnStaticMap(map)
#image(k2, col=cols2, add=T)
points(coords$newX, coords$newY, pch=16, cex=0.1)
# Plot
PlotOnStaticMap(map)
#image(k2, col=cols2, add=T)
points(coords$newX, coords$newY, pch=16, cex=0.2)
library(MASS)
library(RgoogleMaps)
library(RColorBrewer)
source('colorRampPaletteAlpha.R')
# Keep the lon and lat data
rawdata <- data.frame(as.numeric(accidentsData$Longitude), as.numeric(accidentsData$Latitude))
names(rawdata) <- c("lon", "lat")
# Mapping via RgoogleMaps
# Find map center and get map
center <- rev(sapply(rawdata, mean))
map <- GetMap(center=center, zoom=7)
# Translate original data
coords <- LatLon2XY.centered(map, rawdata$lat, rawdata$lon, 7)
coords <- data.frame(coords)
# Plot
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch=16, cex=0.2)
library(MASS)
library(RgoogleMaps)
library(RColorBrewer)
source('colorRampPaletteAlpha.R')
# Keep the lon and lat data
rawdata <- data.frame(as.numeric(accidentsData$Longitude), as.numeric(accidentsData$Latitude))
names(rawdata) <- c("lon", "lat")
# Mapping via RgoogleMaps
# Find map center and get map
center <- rev(sapply(rawdata, mean))
map <- GetMap(center=center, zoom=7)
# Translate original data
coords <- LatLon2XY.centered(map, rawdata$lat, rawdata$lon, 7)
coords <- data.frame(coords)
# Plot
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch=*:, cex=0.2)
# Plot
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch=1:, cex=0.2)
# Plot
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch=1, cex=0.2)
# Plot
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch=1, cex=0.1)
# Plot
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch=8, cex=0.1)
points(coords$newX, coords$newY, pch=16, cex=0.1)
# Plot
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch=16, cex=0.2)
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch=16, cex=0.3)
ot
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch=1, cex=0.2)
# Plot
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch=8, cex=0.2)
# Plot
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch=16, cex=0.2, col='red')
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch=16, cex=0.2, col=c('red','black'))
# Plot
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch='.', cex=0.2, col='red')
lotOnStaticMap(map)
points(coords$newX, coords$newY, pch='.', cex=0.2, col('red',alpha=0.2))
# Plot
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch='.', cex=0.2, col=rgb(red=0.2, green=0.2, blue=1.0, alpha=0.2)
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch='.', cex=0.2, col=rgb(red=0.2, green=0.2, blue=1.0, alpha=0.2))
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch='.', cex=0.2, col=rgb(red=1.0, green=0.0, blue=0.0, alpha=0.1))
points(coords$newX, coords$newY, pch='.', cex=0.2, col=rgb(red=1.0, green=0.0, blue=0.0, alpha=0.8))
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch='.', cex=0.2, col=rgb(red=1.0, green=0.0, blue=0.0, alpha=0.01))
# Plot
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch='.', cex=0.2, col=rgb(red=1.0, green=0.0, blue=0.0, alpha=0.1))
# Chunk 1: set-options
options(width = 200)
# Chunk 2
library("downloader")
folder<-".\\data\\DfTRoadSafety_Accidents_2014.csv"
if(!file.exists(folder)){
# Download a csv file from the Internet:
fileURL <- "https://dl.dropboxusercontent.com/u/73991112/DfTRoadSafety_Accidents_2014.csv"
download.file(fileURL, destfile = folder)
# Always record the date
dateDownloaded <- date()
dateDownloaded
}
# Read from local drive
accidentsData <- read.csv(folder, sep = ",",header = T, row.names=NULL)[,c(1,4:5,8:12)]
# Reading the first records :
head(accidentsData)
# Chunk 3
summary(accidentsData[,c(4:5)])
library(MASS)
library(RgoogleMaps)
#library(RColorBrewer)
# Keep the lon and lat data
rawdata <- data.frame(as.numeric(accidentsData$Longitude), as.numeric(accidentsData$Latitude))
names(rawdata) <- c("lon", "lat")
# Mapping via RgoogleMaps
# Find map center and get map
center <- rev(sapply(rawdata, mean))
map <- GetMap(center=center, zoom=7)
# Translate original data
coords <- LatLon2XY.centered(map, rawdata$lat, rawdata$lon, 7)
coords <- data.frame(coords)
# Plot
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch='.', cex=0.2, col=rgb(red=1.0, green=0.0, blue=0.0, alpha=0.1))
hist?יקךפ
hist?help()
help(hist)
hist(accidentsData$Day_of_Week,col="green")
hist(accidentsData$Day_of_Week,col="green",vreaks=100)
hist(accidentsData$Day_of_Week,col="green")
hist(accidentsData$Day_of_Week,col="green")
help("hist")
hist(accidentsData$Day_of_Week,col="green", main="Histogram for accidents during days of the week",
xlab="Day",
border="blue",
col="green",
xlim=c(0,7),
las=1,
breaks=5)
hist(accidentsData$Day_of_Week,col="green", main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", xlim=c(0,7), las=1, breaks=5)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", xlim=c(0,7), las=1, breaks=5)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", xlim=c(1,7), las=1)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", xlim=c(1,7), breaks=5)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", xlim=c(1,7), breaks=1)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7), breaks=1)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7), breaks=7)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7))
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 2)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 3)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 0)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(0,7),las = 1)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1,breaks = 10)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1,breaks = 9)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1,breaks = 8)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1,breaks = 9)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1,prob = TRUE)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,6),las = 1)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1,breaks=rep(1:7,each=2)+c(-.4,.4))
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1,breaks=rep(1:7,each=2)+c(-.4,.4),prob=FALSE)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1,breaks=rep(1:7,each=1)+c(-.4,.4),prob=FALSE)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1,breaks=rep(1:7,each=3)+c(-.4,.4),prob=FALSE)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1,breaks=rep(1:7,each=2)+c(-.4,.4),prob=FALSE)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1,breaks=rep(1:7,each=2)+c(-.3,.3),prob=FALSE)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1,breaks=rep(1:7,each=2)+c(-.1,.1),prob=FALSE)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1,breaks=rep(1:7,each=2)+c(-.2,.2),prob=FALSE)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c('Sunday'),las = 1,breaks=rep(1:7,each=2)+c(-.2,.2),prob=FALSE)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1,breaks=rep(1:7,each=2)+c(-.2,.2),prob=FALSE)
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1,breaks=rep(1:7,each=2)+c(-.2,.2),prob=FALSE, labels =c('Sunday'))
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1,breaks=rep(1:7,each=2)+c(-.2,.2),prob=FALSE, labels =c('Sunday','Monday'))
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1,breaks=rep(1:7,each=2)+c(-.2,.2),prob=FALSE, labels =c('Sunday','Monday','Tuesday'))
hist(accidentsData$Day_of_Week,main="Histogram for accidents during days of the week", xlab="Day",  border="blue",col="green", ylab="Number of Accidents",xlim=c(1,7),las = 1,breaks=rep(1:7,each=2)+c(-.2,.2),prob=FALSE, labels =c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'))
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
lbls <- paste(names(mytable), "\n", mytable, sep="")
pie(mytable, labels = lbls,
main="Pie Chart of Species\n (with sample sizes)")
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
lbls <- paste(names('Sunday'), "\n", mytable, sep="")
pie(mytable, labels = lbls,
main="Pie Chart of Species\n (with sample sizes)")
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
lbls <- paste(names('Sunday','Monday'), "\n", mytable, sep="")
pie(mytable, labels = lbls,
main="Pie Chart of Species\n (with sample sizes)")
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
#lbls <- paste(names('Sunday','Monday'), "\n", mytable, sep="")
pie(mytable, labels = lbls,
main="Pie Chart of Species\n (with sample sizes)")
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
#lbls <- paste(names('Sunday','Monday'), "\n", mytable, sep="")
pie(mytable, labels = c('Sunday'),
main="Pie Chart of Species\n (with sample sizes)")
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
#lbls <- paste(names('Sunday','Monday'), "\n", mytable, sep="")
pie(mytable, labels = c('Sunday'), 	main="Pie Chart of accidents during days of the week")
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
#lbls <- paste(names('Sunday','Monday'), "\n", mytable, sep="")
pie(mytable, labels = c('Sunday'), 	main="Pie Chart of accidents during\ndays of the week")
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
#lbls <- paste(names('Sunday','Monday'), "\n", mytable, sep="")
pie(mytable, labels = c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday'), 	main="Pie Chart of accidents during\ndays of the week")
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
days<-c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday')
bls <- paste(names(days), "\n", mytable, sep="")
pie(mytable, labels =bls, 	main="Pie Chart of accidents during\ndays of the week")
bls <- paste(names(days), "\n", mytable, sep="")
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
days<-c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday')
bls <- paste(names(mytable), "\n", days, sep="")
pie(mytable, labels =bls, 	main="Pie Chart of accidents during\ndays of the week")
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
days<-c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday')
bls <- paste(names(days), "\n", mytable, sep="")
pie(mytable, labels =bls, 	main="Pie Chart of accidents during\ndays of the week")
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
days<-c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday')
bls <- paste(days, "\n",mytable , sep="")
pie(mytable, labels =bls, 	main="Pie Chart of accidents during\ndays of the week")
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
days<-c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday')
bls <- paste(days, "\n",mytable , sep="")
pie(mytable, labels =bls, 	main="Pie Chart of accidents during\ndays of the week",col=c('red','blue','yellow','black','green','white','orange'))
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
days<-c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday')
bls <- paste(days, "\n",mytable , sep="")
pie(mytable, labels =bls, 	main="Pie Chart of accidents during\ndays of the week",col=c('thistle','blue','yellow','black','green','white','orange'))
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
days<-c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday')
bls <- paste(days, "\n",mytable , sep="")
pie(mytable, labels =bls, 	main="Pie Chart of accidents during\ndays of the week",col=c('thistle','tomato','yellow','black','green','white','orange'))
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
days<-c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday')
bls <- paste(days, "\n",mytable , sep="")
pie(mytable, labels =bls, 	main="Pie Chart of accidents during\ndays of the week",col=c('thistle','tomato','turquoise','black','green','white','orange'))
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
days<-c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday')
bls <- paste(days, "\n",mytable , sep="")
pie(mytable, labels =bls, 	main="Pie Chart of accidents during\ndays of the week",col=c('thistle','tomato','turquoise','violet','green','white','orange'))
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
days<-c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday')
bls <- paste(days, "\n",mytable , sep="")
pie(mytable, labels =bls, 	main="Pie Chart of accidents during\ndays of the week",col=c('thistle','tomato','turquoise','violet','skyblue','white','orange'))
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
days<-c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday')
bls <- paste(days, "\n",mytable , sep="")
pie(mytable, labels =bls, 	main="Pie Chart of accidents during\ndays of the week",col=c('thistle','tomato','turquoise','violet','skyblue','skyblue4','orange'))
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
days<-c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday')
bls <- paste(days, "\n",mytable , sep="")
pie(mytable, labels =bls, 	main="Pie Chart of accidents during\ndays of the week",col=c('thistle','tomato','turquoise','violet','skyblue','skyblue4','slatgray'))
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
days<-c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday')
bls <- paste(days, "\n",mytable , sep="")
pie(mytable, labels =bls, 	main="Pie Chart of accidents during\ndays of the week",col=c('thistle','tomato','turquoise','violet','skyblue','skyblue4','slategray'))
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
days<-c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday')
bls <- paste(days, "\n",mytable , sep="")
pie(mytable, labels =bls, 	main="Pie Chart of accidents during\ndays of the week",col=cm)
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
days<-c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday')
bls <- paste(days, "\n",mytable , sep="")
pie(mytable, labels =bls, 	main="Pie Chart of accidents during\ndays of the week",col=cm.colors(7))
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
days<-c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday')
bls <- paste(days, "\n",mytable , sep="")
pie(mytable, labels =bls, 	main="Pie Chart of accidents during\ndays of the week",col=heat.colors(7))
# Pie Chart from data frame with Appended Sample Sizes
mytable <- table(accidentsData$Day_of_Week)
days<-c('Sunday','Monday','Tuesday','Wednesday','Thursday','Friday','Saturday')
bls <- paste(days, "\n",mytable , sep="")
pie(mytable, labels =bls, 	main="Pie Chart of accidents during\ndays of the week",col=terrain.colors(7))
library(MASS)
library(RgoogleMaps)
# Keep the lon and lat data
rawdata <- data.frame(as.numeric(accidentsData$Longitude), as.numeric(accidentsData$Latitude))
names(rawdata) <- c("lon", "lat")
# Mapping via RgoogleMaps
# Find map center and get map
center <- rev(sapply(rawdata, mean))
map <- GetMap(center=center, zoom=7)
# Translate original data
coords <- LatLon2XY.centered(map, rawdata$lat, rawdata$lon, 7)
coords <- data.frame(coords)
# Plot
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch='.', cex=0.2, col=terrain.colors(12,0.1))
library(MASS)
library(RgoogleMaps)
# Keep the lon and lat data
rawdata <- data.frame(as.numeric(accidentsData$Longitude), as.numeric(accidentsData$Latitude))
names(rawdata) <- c("lon", "lat")
# Mapping via RgoogleMaps
# Find map center and get map
center <- rev(sapply(rawdata, mean))
map <- GetMap(center=center, zoom=7)
# Translate original data
coords <- LatLon2XY.centered(map, rawdata$lat, rawdata$lon, 7)
coords <- data.frame(coords)
# Plot
PlotOnStaticMap(map)
points(coords$newX, coords$newY, pch=16, cex=0.2, col=terrain.colors(12,0.1))
points(coords$newX, coords$newY, pch=16, cex=0.2, col=heat.colors(12,0.1))
hist(accidentsData$Time,main="Histogram for Number of Accidents\nVS\nTime", xlab="Time",col=terrain.colors(24), ylab="Number of Accidents",xlim=c(0,24),las = 1)
hist(as.numeric(accidentsData$Time),main="Histogram for Number of Accidents\nVS\nTime", xlab="Time",col=terrain.colors(24), ylab="Number of Accidents",xlim=c(0,24),las = 1)
hist(as.numeric(accidentsData$Time),main="Histogram for Number of Accidents\nVS\nTime", xlab="Time",col=terrain.colors(24), ylab="Number of Accidents",las = 1)
View(accidentsData)
as.hour(accidentsData$Time)
install.packages("epitools")
as.hour(accidentsData$Time)
library("epitools", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
as.hour(accidentsData$Time)
substr(accidentsData$Time,1,2)
hist(substr(accidentsData$Time,1,2),main="Histogram for Number of Accidents\nVS\nTime", xlab="Time",col=terrain.colors(24), ylab="Number of Accidents",las = 1)
hist(as.numeric(substr(accidentsData$Time,1,2)),main="Histogram for Number of Accidents\nVS\nTime", xlab="Time",col=terrain.colors(24), ylab="Number of Accidents",las = 1)
hist(as.numeric(substr(accidentsData$Time,1,2)),main="Histogram for Number of Accidents\nVS\nTime", xlab="Time",col=terrain.colors(24), ylab="Number of Accidents",las = 1,xlim = c(1,24))
hist(as.numeric(substr(accidentsData$Time,1,2)),main="Histogram for Number of Accidents\nVS\nTime", xlab="Time",col=terrain.colors(24), ylab="Number of Accidents",las = 1,xlim = c(1,24))
hist(as.numeric(substr(accidentsData$Time,1,2)),main="Histogram for Number of Accidents\nVS\nTime", xlab="Time",col=terrain.colors(24), ylab="Number of Accidents",las = 1,xlim = c(0,23),breaks = 24)
help("hist")
hist(as.numeric(substr(accidentsData$Time,1,2)),main="Histogram for Number of Accidents\nVS\nTime", xlab="Time",col=terrain.colors(24), ylab="Number of Accidents",las = 1,xlim = c(0,23),count =c(0:23))
